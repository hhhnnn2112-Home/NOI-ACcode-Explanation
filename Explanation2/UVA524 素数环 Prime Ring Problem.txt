int n,output[17],cnt=1;
bool book[17];
void dfs(int x);
void print();
bool isprime(int x);
int main(){
    while(cin>>n){
    	if(cnt>1)cout<<endl;
	cout<<"Case "<<cnt<<":"<<endl;
	cnt++;
	output[0]=1;
	book[1]=1;
	dfs(1);
	memset(book,false,sizeof(book));
    }
    return 0;
}
void dfs(int x){
    if(x==n&&isprime(output[n-1]+output[0])){
	print();
	return;
    }
    for(int i=2;i<=n;i++){
        if(!book[i]&&isprime(i+output[x-1])){
            output[x]=i;
            book[i]=1;
            dfs(x+1);
            book[i]=0;
        }
    }
}
bool isprime(int x){
    if(x<2)return false;
    if(x==2)return true;
    for(int i=2;i<=sqrt(x);i++){
	if(x%i==0)  return false;
    }
    return true;
}
void print(){
    for(int i=0;i<n-1;i++){
    	cout<<output[i]<<" ";
    }
    cout<<output[n-1]<<endl;
}